{"version":3,"sources":["utils/utils.js","map/Map.js","res/data_for_visualisations.csv","res/data_bar_chart_race.csv","race/Race.js","line/Line.js","Welcome.js","App.js","index.js"],"names":["mapToHue","value","min","max","in_min","in_max","out_min","out_max","rangeMap","createRange","ranges","GNI","total_msw_total_msw_generated_tons_year","waste_treatment_recycling_percent","population","msw_per_capita_in_kg","axisMapping","composition_food_organic_waste_percent","composition_glass_percent","composition_metal_percent","composition_other_percent","composition_paper_cardboard_percent","composition_plastic_percent","composition_rubber_leather_percent","composition_wood_percent","composition_yard_garden_green_waste_percent","calcColor","x","y","xRange","yRange","isNaN","Color","rgb","hex","Map","data","useState","map","setMap","polygons","setPolygons","xAxis","setxAxis","yAxis","setyAxis","xAxisLegend","setXAxisLegend","yAxisLegend","setYAxisLegend","isMapCreated","setIsMapCreated","showDetail","setShowDetail","useEffect","newMap","am4core","am4maps","geodata","am4geodata_worldLow","projection","Miller","homeZoomLevel","homeGeoPoint","longitude","latitude","polygonSeries","series","push","useGeodata","exclude","legendContainer","chartContainer","createChild","dx","dy","width","height","background","fill","fillOpacity","stroke","strokeOpacity","strokeWidth","legend","align","layout","i","j","col","rect","legendXAxis","text","fontWeight","legendYAxis","rotation","currentViewData","_","country","xVal","Math","round","yVal","get","values","reduce","acc","_key","desc","id","ID","polygonTemplate","mapPolygons","template","tooltip","forEach","key","includes","concat","tooltipText","propertyFields","className","style","onChange","selected","target","data-toggle","type","colorMap","Southeasteurope","Centraleurope","Westerneurope","Northerneurope","Southerneurope","Race","am4themes_animated","chart","am4charts","padding","label","plotContainer","horizontalCenter","verticalCenter","fontSize","playButton","events","on","event","isActive","year","interval","setInterval","nextYear","stepDuration","play","clearInterval","categoryAxis","yAxes","renderer","grid","location","dataFields","category","minGridDistance","inversed","disabled","valueAxis","xAxes","rangeChangeEasing","linear","rangeChangeDuration","extraMax","title","categoryY","valueX","columns","column","cornerRadiusBottomRight","cornerRadiusTopRight","interpolationDuration","interpolationEasing","labelBullet","bullets","textAlign","zoomOutButton","adapter","add","countryCategories","dataItem","parent","itemContainers","clickable","focusable","cursorOverStyle","default","name","toString","sortBySeries","JSON","parse","stringify","zoom","start","end","dataItems","length","setTimeout","newData","invalidateRawData","raceRange","Array","from","Line","countryA","setCountryA","countryB","setCountryB","seriesA","setSeriesA","seriesB","setSeriesB","setChart","newChart","dateAxis","countryASeries","valueY","dateX","pointerOrientation","getFillFromObject","countryBSeries","cursor","fullWidthLineX","lineX","lineY","transformedData","date","valA","parseInt","valB","Date","countries","c","marginLeft","Welcome","minHeight","backgroundColor","App","mapData","setMapData","raceData","setRaceData","lineData","setlineData","currentElement","setCurrentElement","fetch","mapPath","then","res","csv","Papa","delimiter","header","wastePath","rData","Country","Category","groupBy","elements","onClick","position","top","left","right","bottom","justifyContent","alignItems","zIndex","border","outline","opacity","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee58fe00.chunk.js","sourcesContent":["export const rangeMap = (value, in_min, in_max, out_min, out_max) =>\n    ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\n\nexport const mapToHue = (value, min, max) => rangeMap(value, min, max, 50, 200);\n","import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\n\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4geodata_worldLow from '@amcharts/amcharts4-geodata/worldLow';\nimport Color from 'color';\n\nimport { mapToHue } from '../utils/utils';\n\nconst createRange = (min, max) => {\n    return { min, max };\n};\n\nconst ranges = {\n    GNI: createRange(99, 190017),\n    total_msw_total_msw_generated_tons_year: createRange(0, 258000000),\n    waste_treatment_recycling_percent: createRange(0, 100),\n    population: createRange(11097, 1371220000),\n    msw_per_capita_in_kg: createRange(0, 1587),\n};\n\nconst axisMapping = {\n    GNI: 'GNI per capita ($)',\n    waste_treatment_recycling_percent: 'Recycling rate (%)',\n    population: 'Population',\n    msw_per_capita_in_kg: 'Waste per capita (kg)',\n    total_msw_total_msw_generated_tons_year: 'Total waste generated (t)',\n    composition_food_organic_waste_percent: 'Fraction food (%)',\n    composition_glass_percent: 'Fraction glass (%)',\n    composition_metal_percent: 'Fraction metal (%)',\n    composition_other_percent: 'Fraction other (%)',\n    composition_paper_cardboard_percent: 'Fraction paper & cardboard (%)',\n    composition_plastic_percent: 'Fraction plastic (%)',\n    composition_rubber_leather_percent: 'Fraction rubber & leather (%)',\n    composition_wood_percent: 'Fraction wood (%)',\n    composition_yard_garden_green_waste_percent: 'Fraction organic (%)',\n};\n\nconst calcColor = (x, y, xRange, yRange) => {\n    if (isNaN(x) || isNaN(y) || x === 0 || y === 0) return Color.rgb(222, 222, 222).hex();\n    const color = Color.rgb(mapToHue(x, xRange.min, xRange.max), mapToHue(y, yRange.min, yRange.max), 100);\n    return color.hex();\n};\n\nfunction Map({ data }) {\n    const [map, setMap] = useState();\n    const [polygons, setPolygons] = useState();\n\n    const [xAxis, setxAxis] = useState('GNI');\n    const [yAxis, setyAxis] = useState('msw_per_capita_in_kg');\n\n    const [xAxisLegend, setXAxisLegend] = useState();\n    const [yAxisLegend, setYAxisLegend] = useState();\n\n    const [isMapCreated, setIsMapCreated] = useState(false);\n    const [showDetail, setShowDetail] = useState(false);\n\n    // Create map hook\n    useEffect(() => {\n        const newMap = am4core.create('mapdiv', am4maps.MapChart);\n        newMap.geodata = am4geodata_worldLow;\n        newMap.projection = new am4maps.projections.Miller();\n\n        newMap.homeZoomLevel = 3;\n        newMap.homeGeoPoint = { longitude: 12, latitude: 54 };\n\n        setMap(newMap);\n\n        // Polygons\n        const polygonSeries = newMap.series.push(new am4maps.MapPolygonSeries());\n        polygonSeries.useGeodata = true;\n        polygonSeries.exclude = ['AQ'];\n        setPolygons(polygonSeries);\n\n        // Create Legend\n        const legendContainer = newMap.chartContainer.createChild(am4core.Container);\n\n        legendContainer.x = am4core.percent(0);\n        legendContainer.y = am4core.percent(100);\n        legendContainer.dx = 25;\n        legendContainer.dy = -275;\n        legendContainer.width = 250;\n        legendContainer.height = 250;\n        legendContainer.background.fill = am4core.color('#000');\n        legendContainer.background.fillOpacity = 0.3;\n        legendContainer.background.stroke = am4core.color('#000');\n        legendContainer.background.strokeOpacity = 0.4;\n        legendContainer.background.strokeWidth = 2;\n\n        const legend = legendContainer.createChild(am4core.Container);\n\n        legend.width = 200;\n        legend.height = 200;\n        legend.align = 'center';\n        legend.dy = 25;\n        legend.layout = 'grid';\n        legend.background.stroke = am4core.color('#000');\n        legend.background.strokeOpacity = 0.8;\n        legend.background.strokeWidth = 3;\n\n        for (let i = 0; i < 5; i++) {\n            for (let j = 0; j < 5; j++) {\n                const col = Color.rgb(40 * j, 40 * i, 100);\n                const rect = legend.createChild(am4core.Rectangle);\n                rect.width = 40;\n                rect.height = 40;\n                rect.fill = col.hex();\n            }\n        }\n\n        // Legend axis\n        const legendXAxis = legendContainer.createChild(am4core.Label);\n        legendXAxis.x = am4core.percent(10);\n        legendXAxis.y = am4core.percent(0.5);\n        legendXAxis.text = 'GNI per capita ($) --->';\n        legendXAxis.fontWeight = 'bold';\n        setXAxisLegend(legendXAxis);\n\n        const legendYAxis = legendContainer.createChild(am4core.Label);\n        legendYAxis.x = am4core.percent(0.5);\n        legendYAxis.y = am4core.percent(90);\n        legendYAxis.rotation = -90;\n        legendYAxis.text = '<--- Waste per capita (kg)';\n        legendYAxis.fontWeight = 'bold';\n        setYAxisLegend(legendYAxis);\n\n        setIsMapCreated(true);\n    }, []);\n\n    // Generate polygons from data\n    // Should pobably be called less often for the sake of performance\n    useEffect(() => {\n        if (data && isMapCreated) {\n            const currentViewData = _.map(data, (country) => {\n                const xVal = Math.round(country[xAxis]);\n                const yVal = Math.round(country[yAxis]);\n                const xRange = _.get(ranges, xAxis);\n                const yRange = _.get(ranges, yAxis);\n\n                xAxisLegend.text = `${axisMapping[xAxis]} --->`;\n                yAxisLegend.text = `<--- ${axisMapping[yAxis]}`;\n\n                const values = _.reduce(\n                    axisMapping,\n                    (acc, _key, desc) => {\n                        const value = Math.round(_.get(country, desc));\n                        return { ...acc, [desc]: isNaN(value) || value === 0 ? 'no data' : value };\n                    },\n                    {}\n                );\n\n                return {\n                    id: country.ID,\n                    xAxis: xVal,\n                    yAxis: yVal,\n                    fill: am4core.color(calcColor(xVal, yVal, xRange, yRange)),\n                    ...values,\n                };\n            });\n\n            polygons.data = currentViewData;\n\n            const polygonTemplate = polygons.mapPolygons.template;\n\n            let tooltip = '[bold]{name}[/]';\n            _.forEach(axisMapping, (key, value) => {\n                if (!showDetail && value.includes('composition')) {\n                    return;\n                }\n                if (value === xAxis || value === yAxis) {\n                    tooltip = tooltip.concat(`\\n[bold]${key}: {${value}}[/]`);\n                } else {\n                    tooltip = tooltip.concat(`\\n${key}: {${value}}`);\n                }\n            });\n            polygonTemplate.tooltipText = tooltip;\n\n            polygonTemplate.propertyFields.fill = 'fill';\n        }\n    }, [data, map, polygons, xAxis, yAxis, showDetail]);\n\n    return (\n        <>\n            <div className={''} style={{ width: '100%', height: '100%' }}>\n                <h4 className={'text-center pt-2'}>Select two variables and learn more about their correlation</h4>\n                <form className={'d-flex justify-content-center pb-2'}>\n                    <select className={'mr-2'} value={xAxis} onChange={(selected) => setxAxis(selected.target.value)}>\n                        <option value={'GNI (income in $)'}>GNI per capita ($)</option>\n                        <option value={'population'}>Population</option>\n                        <option value={'total_msw_total_msw_generated_tons_year'}>Total waste generated (t)</option>\n                        <option value={'msw_per_capita_in_kg'}>Waste per capita (kg)</option>\n                    </select>\n                    <select className={'mr-2'} value={yAxis} onChange={(selected) => setyAxis(selected.target.value)}>\n                        <option value={'total_msw_total_msw_generated_tons_year'}>Total waste generated (t)</option>\n                        <option value={'msw_per_capita_in_kg'}>Waste per capita (kg)</option>\n                        <option value={'waste_treatment_recycling_percent'}>Recycling rate (%)</option>\n                    </select>\n                    <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n                        <label className={`btn  ${showDetail ? 'btn-success' : 'btn-outline-success'}`}>\n                            <input type=\"checkbox\" onChange={() => setShowDetail(!showDetail)} />\n                            Show detailed composition\n                        </label>\n                    </div>\n                </form>\n\n                <div className={'border rounded'} id=\"mapdiv\" style={{ width: '100%', height: '100%' }} />\n            </div>\n        </>\n    );\n}\n\nexport default Map;\n","export default __webpack_public_path__ + \"static/media/data_for_visualisations.f086fa6a.csv\";","export default __webpack_public_path__ + \"static/media/data_bar_chart_race.441527ad.csv\";","import React, { useEffect } from 'react';\n\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\n\nconst colorMap = {\n    Southeasteurope: '#3895FD',\n    Centraleurope: '#32B4E3',\n    Westerneurope: '#43F9F9',\n    Northerneurope: '#32E3B1',\n    Southerneurope: '#38FD8D',\n};\n\nfunction Race({ data }) {\n    useEffect(() => {\n        if (!data) return;\n\n        am4core.useTheme(am4themes_animated);\n\n        const chart = am4core.create('racediv', am4charts.XYChart);\n        chart.padding(40, 40, 40, 40);\n\n        const label = chart.plotContainer.createChild(am4core.Label);\n        label.x = am4core.percent(97);\n        label.y = am4core.percent(95);\n        label.horizontalCenter = 'right';\n        label.verticalCenter = 'middle';\n        label.dx = -15;\n        label.fontSize = 50;\n\n        const playButton = chart.plotContainer.createChild(am4core.PlayButton);\n        playButton.x = am4core.percent(97);\n        playButton.y = am4core.percent(95);\n        playButton.dy = -2;\n        playButton.verticalCenter = 'middle';\n        playButton.events.on('toggled', function (event) {\n            if (event.target.isActive) {\n                play();\n            } else {\n                stop();\n            }\n        });\n\n        const stepDuration = 2000;\n\n        let categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n        categoryAxis.renderer.grid.template.location = 0;\n        categoryAxis.dataFields.category = 'id';\n        categoryAxis.renderer.minGridDistance = 1;\n        categoryAxis.renderer.inversed = true;\n        categoryAxis.renderer.grid.template.disabled = true;\n\n        let valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n        valueAxis.min = 0;\n        valueAxis.rangeChangeEasing = am4core.ease.linear;\n        valueAxis.rangeChangeDuration = stepDuration;\n        valueAxis.extraMax = 0.1;\n        valueAxis.title.text = 'Waste per capita (kg)';\n\n        const series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.categoryY = 'id';\n        series.dataFields.valueX = 'value';\n        series.tooltipText = '{valueX.value}';\n        series.columns.template.strokeOpacity = 0;\n        series.columns.template.column.cornerRadiusBottomRight = 5;\n        series.columns.template.column.cornerRadiusTopRight = 5;\n        series.interpolationDuration = stepDuration;\n        series.interpolationEasing = am4core.ease.linear;\n\n        const labelBullet = series.bullets.push(new am4charts.LabelBullet());\n        labelBullet.label.horizontalCenter = 'right';\n        labelBullet.label.text = \"{values.valueX.workingValue.formatNumber('#.as')}\";\n        labelBullet.label.textAlign = 'end';\n        labelBullet.label.dx = -10;\n\n        chart.zoomOutButton.disabled = true;\n\n        series.columns.template.adapter.add('fill', function (_, target) {\n            return am4core.color(colorMap[data.countryCategories[target.dataItem.categoryY]]);\n        });\n\n        const legend = new am4charts.Legend();\n        legend.parent = chart.chartContainer;\n        legend.align = 'center';\n        legend.itemContainers.template.clickable = false;\n        legend.itemContainers.template.focusable = false;\n        legend.itemContainers.template.cursorOverStyle = am4core.MouseCursorStyle.default;\n        legend.data = [\n            {\n                name: 'Central Europe',\n                fill: '#32B4E3',\n            },\n            {\n                name: 'Northern Europe',\n                fill: '#32E3B1',\n            },\n            {\n                name: 'Southeast Europe',\n                fill: '#3895FD',\n            },\n            {\n                name: 'Southern Europe',\n                fill: '#38FD8D',\n            },\n\n            {\n                name: 'Western Europe',\n                fill: '#43F9F9',\n            },\n        ];\n\n        series.propertyFields.fill = 'fill';\n\n        let year = 2000;\n        label.text = year.toString();\n\n        let interval;\n\n        function play() {\n            if (year >= 2018) {\n                year = 1999;\n            }\n            interval = setInterval(function () {\n                nextYear();\n            }, stepDuration);\n            nextYear();\n        }\n\n        function stop() {\n            if (interval) {\n                clearInterval(interval);\n            }\n        }\n\n        function nextYear() {\n            year++;\n\n            if (year > 2018) {\n                year = 2018;\n                playButton.isActive = false;\n            }\n\n            const newData = data[year];\n            for (let i = 0; i < chart.data.length; i++) {\n                chart.data[i].value = newData[i].value;\n            }\n\n            series.interpolationDuration = stepDuration;\n            valueAxis.rangeChangeDuration = stepDuration;\n\n            chart.invalidateRawData();\n            label.text = year.toString();\n        }\n\n        categoryAxis.sortBySeries = series;\n\n        chart.data = JSON.parse(JSON.stringify(data[year]));\n\n        series.events.on('inited', function () {\n            categoryAxis.zoom({ start: 0, end: 20 / categoryAxis.dataItems.length });\n            setTimeout(function () {\n                playButton.isActive = false;\n            }, 2000);\n        });\n    }, [data]);\n\n    return (\n        <>\n            <div style={{ width: '100%', height: '100%' }}>\n                <h4 className={'text-center pt-2'}>\n                    Use the Play-Button to see which EU country wins the municipal waste generation race\n                </h4>\n                <div id=\"racediv\" style={{ width: '100%', height: '100%' }} />\n            </div>\n        </>\n    );\n}\n\nexport default Race;\n","import React, { useEffect, useState } from 'react';\n\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\n\nconst raceRange = Array.from({ length: 19 }, (_, i) => i + 2000);\n\n// TODO lots of duplication\n\nfunction Line({ data }) {\n    const [countryA, setCountryA] = useState('Germany');\n    const [countryB, setCountryB] = useState('Finland');\n\n    const [seriesA, setSeriesA] = useState();\n    const [seriesB, setSeriesB] = useState();\n\n    const [chart, setChart] = useState();\n\n    useEffect(() => {\n        am4core.useTheme(am4themes_animated);\n\n        const newChart = am4core.create('linediv', am4charts.XYChart);\n\n        // Axis'\n        const dateAxis = newChart.xAxes.push(new am4charts.DateAxis());\n        dateAxis.renderer.minGridDistance = 20;\n\n        const valueAxis = newChart.yAxes.push(new am4charts.ValueAxis());\n        valueAxis.title.text = 'Waste per capita (kg)';\n        valueAxis.title.fontWeight = 'bold';\n\n        // Series'\n        const countryASeries = newChart.series.push(new am4charts.LineSeries());\n        countryASeries.dataFields.valueY = 'countryA';\n        countryASeries.dataFields.dateX = 'date';\n\n        countryASeries.tooltipText = '{countryA}';\n        countryASeries.tooltip.pointerOrientation = 'vertical';\n\n        countryASeries.strokeWidth = 4;\n        countryASeries.stroke = am4core.color('#4ea7ff');\n        countryASeries.tooltip.getFillFromObject = false;\n        countryASeries.tooltip.background.fill = am4core.color('#4ea7ff');\n\n        setSeriesA(countryASeries);\n\n        const countryBSeries = newChart.series.push(new am4charts.LineSeries());\n        countryBSeries.dataFields.valueY = 'countryB';\n        countryBSeries.dataFields.dateX = 'date';\n\n        countryBSeries.tooltipText = '{countryB}';\n        countryBSeries.tooltip.pointerOrientation = 'vertical';\n\n        countryBSeries.strokeWidth = 4;\n        countryBSeries.stroke = am4core.color('#ff6720');\n        countryBSeries.tooltip.getFillFromObject = false;\n        countryBSeries.tooltip.background.fill = am4core.color('#ff6720');\n\n        setSeriesB(countryBSeries);\n\n        newChart.cursor = new am4charts.XYCursor();\n        newChart.cursor.fullWidthLineX = true;\n        newChart.cursor.xAxis = dateAxis;\n        newChart.cursor.lineX.strokeWidth = 0;\n        newChart.cursor.lineY.strokeWidth = 0;\n        newChart.cursor.lineX.fill = am4core.color('#000');\n        newChart.cursor.lineX.fillOpacity = 0.1;\n\n        newChart.legend = new am4charts.Legend();\n\n        setChart(newChart);\n    }, []);\n\n    useEffect(() => {\n        if (!data || !chart) return;\n\n        const transformedData = _.map(raceRange, (date) => {\n            const valA = parseInt(_.get(data, countryA)[0][date]);\n            const valB = parseInt(_.get(data, countryB)[0][date]);\n            if (!isNaN(valA) && !isNaN(valB)) return { date: new Date(date, 1, 1), countryA: valA, countryB: valB };\n        });\n\n        seriesA.name = countryA;\n        seriesB.name = countryB;\n        chart.data = transformedData;\n    }, [data, chart, countryA, countryB]);\n\n    const countries = _.map(data, (_, name) => name);\n\n    return (\n        <>\n            <div style={{ width: '100%', height: '100%' }}>\n                <h4 className={'text-center pt-2'}>\n                    Compare the municipal waste generation between two countries of the EU\n                </h4>\n                <form className={'d-flex justify-content-center p-2'}>\n                    <select\n                        value={countryA}\n                        onChange={(selected) => setCountryA(selected.target.value)}\n                        className={'mr-2'}\n                    >\n                        {_.map(countries, (c) => (\n                            <option value={c} key={c}>\n                                {c}\n                            </option>\n                        ))}\n                    </select>\n                    <select value={countryB} onChange={(selected) => setCountryB(selected.target.value)}>\n                        {_.map(countries, (c) => (\n                            <option value={c} key={c}>\n                                {c}\n                            </option>\n                        ))}\n                    </select>\n                </form>\n                <div id=\"linediv\" style={{ width: '95%', height: '100%', marginLeft: '2.5%' }} />\n            </div>\n        </>\n    );\n}\n\nexport default Line;\n","import React from 'react';\n\nfunction Welcome() {\n    return (\n        // <div style={{ width: '100vw', height: '90vh' }}>\n        //     <h1 className={'text-center pt-2'}>Welcome</h1>\n        //     <h6 className={'p-3'}>\n        //         As you know, our consumption behaviour and way of production has a destructive impact on our planet.\n        //         Your and future lives are depending on finding new creative ways to survive with the natural, limited\n        //         resources we are given on planet earth. My topic “Reduce, Reuse, Recycle” deals with the following\n        //         questions: How much waste is generated worldwide? How much trash is recycled worldwide? Is there a\n        //         correlation between a country’s income/population and waste generation/recycling rate? Humankind will\n        //         only survive if we all consume in a sustainable way. You can click your way through the different\n        //         visualisations by using the arrow buttons on the edges of your screen.\n        //     </h6>\n        //     <h6 className={'text-center pt-2'}>Thank you and enjoy!</h6>\n        // </div>\n        <div className=\"d-flex\" style={{ minHeight: '100vh' }}>\n            <div className=\"jumbotron my-auto pl-5 pr-5\" style={{ backgroundColor: 'transparent' }}>\n                <h1 className=\"display-4\">Welcome!</h1>\n                <div className=\"mt-5\" />\n                <p className=\"lead\">\n                    As you know, our consumption behaviour and way of production has a destructive impact on our planet.\n                    Your and future lives are depending on finding new creative ways to survive with the natural,\n                    limited resources we are given on planet earth. My topic <strong>“Reduce, Reuse, Recycle”</strong>{' '}\n                    deals with the following questions: How much waste is generated worldwide? How much trash is\n                    recycled worldwide? Is there a correlation between a country’s income/population and waste\n                    generation/recycling rate? Humankind will only survive if we all consume in a sustainable way.\n                </p>\n                <hr className=\"my-4\" />\n                <p className=\"lead\">\n                    You can click your way through the different visualisations by using the arrow buttons on the edges\n                    of your screen.\n                </p>\n                <div className=\"mt-5\" />\n                <h1 className=\"display-8 text-right\">Thank you and enjoy!</h1>\n            </div>\n        </div>\n    );\n}\n\nexport default Welcome;\n","import React, { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\nimport _ from 'lodash';\n\nimport Map from './map/Map';\nimport mapPath from './res/data_for_visualisations.csv';\nimport wastePath from './res/data_bar_chart_race.csv';\nimport Race from './race/Race';\nimport Line from './line/Line';\nimport Welcome from './Welcome';\n\nfunction App() {\n    const [mapData, setMapData] = useState();\n    const [raceData, setRaceData] = useState();\n    const [lineData, setlineData] = useState();\n    const [currentElement, setCurrentElement] = useState(0);\n\n    // Load data\n    useEffect(() => {\n        // TODO no duplication\n        fetch(mapPath)\n            .then((res) => res.text())\n            .then((text) => {\n                const csv = Papa.parse(text, { delimiter: ';', header: true });\n                setMapData(csv.data);\n            });\n        fetch(wastePath)\n            .then((res) => res.text())\n            .then((text) => {\n                const csv = Papa.parse(text, { delimiter: ';', header: true });\n                // Transform data\n\n                // TODO should probably not be here also is very hacked together and unsafe\n                const raceRange = Array.from({ length: 19 }, (_, i) => i + 2000);\n\n                const rData = _.reduce(\n                    raceRange,\n                    (acc, year) => {\n                        return {\n                            ...acc,\n                            [year]: _.map(csv.data, (country) => {\n                                const value = _.get(country, year);\n                                return { id: country['Country'], value: isNaN(value) ? '0' : value };\n                            }),\n                        };\n                    },\n                    {}\n                );\n                rData.countryCategories = _.reduce(\n                    csv.data,\n                    (acc, country) => ({ ...acc, [country.Country]: country.Category }),\n                    {}\n                );\n\n                setRaceData(rData);\n\n                setlineData(_.groupBy(csv.data, (country) => country.Country));\n            });\n    }, []);\n\n    const elements = [\n        <Welcome key={0} />,\n        <Line data={lineData} key={1} />,\n        <Race data={raceData} key={2} />,\n        <Map data={mapData} key={3} />,\n    ];\n\n    const handlePrev = () => {\n        if (currentElement === 0) setCurrentElement(elements.length - 1);\n        else setCurrentElement(currentElement - 1);\n    };\n\n    const handleNext = () => {\n        if (currentElement === elements.length - 1) setCurrentElement(0);\n        else setCurrentElement(currentElement + 1);\n    };\n\n    return (\n        <div className=\"App\" style={{ width: '100vw', height: '90vh' }}>\n            <button\n                onClick={handlePrev}\n                style={{\n                    position: 'absolute',\n                    width: 50,\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    zIndex: 99,\n                    border: 0,\n                    background: 'transparent',\n                    outline: 'none',\n                }}\n            >\n                <i className=\"fa fa-angle-double-left\" style={{ fontSize: '3em', opacity: '30%' }} />\n            </button>\n            <button\n                onClick={handleNext}\n                style={{\n                    position: 'absolute',\n                    width: 50,\n                    top: 0,\n                    left: 'calc(100% - 50px)',\n                    right: 0,\n                    bottom: 0,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    zIndex: 99,\n                    border: 0,\n                    background: 'transparent',\n                    outline: 'none',\n                }}\n            >\n                <i className=\"fa fa-angle-double-right\" style={{ fontSize: '3em', opacity: '30%' }} />\n            </button>\n            {elements[currentElement]}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}